description = 'Spring Boot integration for functional programming monads'

dependencies {
    // Core module dependency
    api project(':jmonadic-core')
    
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.1'
    
    // Resilience4j - Production-ready resilience patterns
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-all:2.2.0'
    implementation 'io.vavr:vavr:0.10.4'
    
    // Observability
    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.1'
    implementation 'io.opentelemetry:opentelemetry-api:1.40.0'
    
    // Logging
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.4'
    
    // Database (optional)
    compileOnly 'com.h2database:h2:2.2.224'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'
}

jar {
    archiveBaseName = 'jmonadic-spring'
    manifest {
        attributes(
            'Implementation-Title': 'JMonadic Spring Integration',
            'Implementation-Version': version,
            'Automatic-Module-Name': 'org.jmonadic.spring',
            'Main-Class': 'org.jmonadic.JMonadicApplication'
        )
    }
}